## 4.5.1. 外设配置
* 3个HDMI (Global_GeneralCamType类型) 摄像头，1个USB (Global_GeneralCamType_Other类型)  摄像头
* ，需要在本地管理将摄像头打开
显示器要求：分辨率1920*1080

## 4.5.2. DemoMCS 演示
* 场景内容： <br>
①创建三宫格窗口，1宫为导播带录制声网推流，2宫为教师摄像头回显，3宫为学生摄像头回显  
②创建第四个宫格窗口，该窗口为IPC网络摄像头拉流  
③删除第①步创建的三宫格窗口  
④对第四宫格窗口进行顺时针与逆时针各三圈的宫格位置变换，之后回归原位  
⑤重新执行第①步，创建回前三宫窗口  
⑥删除所有窗口  <br><br>

* 场景目的： 演示MCS支持多任务并存。    <br><br> 

* 脚本路径： **/home/user/Metis-MCS/03_Scenario_Driven_Tests/S1E5/Act_Story.py** <br>
          脚本详细执行步骤参考同目录下README.txt 文档。 <br><br> 


* **MCS**：
   * Step 1：近端小站下发 <br>
     调用接口: **<font color=#FF7F00>POST</font>** **`/mediatask/create_update`**
   ```json
    {
    "Name": "S1E5_Main",
    "Type": "MCS",
    "Description": "S1E5 Main MCS,4F-4.1D1PAR-4.2T-4.3S",
    "Version": "0.3",
    "VideoSpecs": [
        {
            "Name": "Teacher",
            "DeviceId": "0400-0000",
            "Width": 1920,
            "Height": 1080,
            "FrameRate": 30
        },
        {
            "Name": "Student",
            "DeviceId": "0403-0001",
            "Width": 1920,
            "Height": 1080,
            "FrameRate": 30
        }
    ],
    "VideoAiSpecs": [
        {
            "Name": "Teacher_Ai",
            "SourceName": "Teacher",
            "Algorithm": "Teacher Tracking",
            "ProcessRate": 10,
            "Width": 1920,
            "Height": 1080,
            "FrameRate": 30
        },
        {
            "Name": "Student_Ai",
            "SourceName": "Student",
            "Algorithm": "Student Tracking",
            "ProcessRate": 30,
            "Width": 1920,
            "Height": 1080,
            "FrameRate": 30
        }
    ],
    "VideoDirectorSpec": {
        "Name": "Director",
        "Width": 1920,
        "Height": 1080,
        "FrameRate": 30,
        "VideoSourceSet":["Student","Teacher","Student_Ai","Teacher_Ai"],
        "FrameSpec": {
            "Template": "single frame",
            "LayoutSpecs": [
                {
                    "Position": 1,
                    "SelectionSpecs": [
                        {
                            "Priority": 1,
                            "VideoSource": "Student_Ai",
                            "State": "Stand_1",
                            "Delay": 2,
                            "Timeout": 2700
                        },
                        {
                            "Priority": 5,
                            "VideoSource": "Teacher_Ai",
                            "State": "Move",
                            "Delay": 0,
                            "Timeout": 2700
                        },
                        {
                            "Priority": 6,
                            "VideoSource": "Teacher_Ai",
                            "State": "Stand",
                            "Delay": 0,
                            "Timeout": 2700
                        },
                        {
                            "Priority": 7,
                            "VideoSource": "Teacher",
                            "State": "Many",
                            "Delay": 0,
                            "Timeout": 2700
                        },
                        {
                            "Priority": 8,
                            "VideoSource": "Teacher",
                            "State": "Out",
                            "Delay": 2,
                            "Timeout": 2700
                        },
                        {
                            "Priority": 9,
                            "VideoSource": "Student",
                            "State": "Stand_N",
                            "Delay": 2,
                            "Timeout": 600
                        },
                        {
                            "Priority": 10,
                            "VideoSource": "Student",
                            "State": "Sit",
                            "Delay": 2,
                            "Timeout": 600
                        },
                        {
                            "Priority": 11,
                            "VideoSource": "Teacher",
                            "State": "NoTeacher",
                            "Delay": 2,
                            "Timeout": 2700
                        },
                        {
                            "Priority": 12,
                            "VideoSource": "Teacher",
                            "State": "Others",
                            "Delay": 0,
                            "Timeout": 2700
                        }
                    ]
                }
            ]
        }
    },
    "VideoCodecSpecs": [
        {
         "Name": "Director_Codec",
         "SourceName": "Director",
         "Codec": "h.264",
         "iFrameInterval": 30,
          "idrInterval": 30,
          "BitRateMode": "vbr",
          "BitRate": "4mbps"
      }
    ],
    "RecordSpecs": [
        {
            "Name": "Director_Record",
            "VideoCodecName": "Director_Codec",
            "Format": "mp4",
            "Path": "/home/user/Videos/eswin/S1E5_Main_Record.mp4"
        }
    ],
    "RenderSpecs": [
        {
            "Name": "Render_test",
            "CompositionSpec": [
                {
                    "Geometry": [0, 0, 960, 540],
                    "SourceName": "Director"
                },
                {
                    "Geometry": [960, 0, 960, 540],
                    "SourceName": "Student"
                },
                {
                    "Geometry": [0, 540, 960, 540],
                    "SourceName": "Teacher"
                }
            ]
        }
    ]
  }
   ```

   * 说明：   
     1. 近端小站需要2个摄像头对应 `VideoSpecs` 中的2个视频输入源，同时利用 `VideoAiSpecs` 生成添加算法的视频源
        合成导播视频流，将导播视频流通过 `VideoCodecSpecs` 进行编码。随后作为录制 `RecordSpecs` 的视频源。
     
    ----------------


   * Step 2：拉取IPC网络摄像头 <br>
     调用接口: **<font color=#FF7F00>POST</font>** **`/mediatask/create_update`**
   ```json
   {
    "Name": "S1E5_IPC",
    "Type": "MCS",
    "Description": "MCS for S1E5 IPC 48 Preview",
    "Version": "0.3",
    "CodecStreamSpecs": [
        {
            "Name": "CodecStreamSpec_pull",
            "VideoCodec": "h.264",
            "URI": "rtsp://10.12.224.48/ch2"
        }
    ],
    "RenderSpecs": [
        {
            "Name": "Render_test",
            "CompositionSpec": [
                {
                    "Geometry": [960, 540, 960, 540],
                    "SourceName": "CodecStreamSpec_pull"
                }
            ]
        }
    ]
   }
   ```

   * 说明：   
     1. 该MCS的操作为拉取远端一路视频并且回显出来。 `CodecStreamSpecs` 中 `URI` 字段即拉取对应流视频，支持 RTSP,RTMP,TCP方式拉流。
     2. 脚本实现走马灯效果即通过不断下发 `Name` 相同但是 `RenderSpecs` 中 `Geometry` 字段不同的MCS，从而实现场景内容第④步描述的顺逆
       时针旋转操作。
     3. 整个流程可以通过使用 **[LogFile功能](/scenarios/ExpendFunction/expend.html#logfile)** ，
      打开LogFile开关可以查看一系列步骤执行下来使用的接口以及下发的MCS内容。

        